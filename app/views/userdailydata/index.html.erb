
</br>
<!--! 

<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.6.2/jquery.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.15/jquery-ui.min.js"></script>
<script src="../d3.v2.js"></script> 
<script src="../rickshaw.js"></script> 
 
 --> 







<div id="chart"></div> 

<script>



var transformedPoints = gon.calories_consumed.map(function (pt) {
    return {
        x: pt[0],
        y: pt[1]
    };
});

gon.calories_consumed = transformedPoints;
//testing deficit 


var transformedGoal = gon.percent_towards_goal.map(function (pt) {
    return {
        x: pt[0],
        y: pt[1]
    };
});

//including bmr and calories burned via exercise
gon.percent_towards_goal = transformedGoal;


var min = Number.MAX_VALUE;
var max = Number.MIN_VALUE;
for (i = 0; i < transformedGoal[0].length; i++) {
  min = Math.min(min, transformedGoal.y);
  max = Math.max(max, transformedGoal.y);
}

var logScale = d3.scale.log().domain([min/4, max]);
var linearScale = d3.scale.linear().domain([min, max]).range(logScale.range());
var graph = new Rickshaw.Graph( {
  element: document.getElementById("chart"),
  renderer: 'multi',
  width: 900,
  height: 500,
  dotSize: 5,
  //need to put in x,y pairs
  series: [
    {
      name: 'Calories',
      data: gon.calories_consumed,
      color: 'rgba(255, 0, 0, 0.4)',
      renderer: 'line',
      scale: logScale


    }, {
      name: 'Percent towards goal',
      data: gon.percent_towards_goal,
      color: 'rgba(255, 127, 0, 0.4)',
      renderer: 'line',
      scale: linearScale
    }
  ]
} );



new Rickshaw.Graph.Axis.Y.Scaled( {
  graph: graph,
  orientation: 'left',
  tickFormat: Rickshaw.Fixtures.Number.formatKMBT,
  element: document.getElementById('y_axis'),
  scale: logScale,
  grid: false
} );

new Rickshaw.Graph.Axis.Y.Scaled( {
  graph: graph,
  orientation: 'right',
  tickFormat: Rickshaw.Fixtures.Number.formatKMBT,
  element: document.getElementById('y_axis_2'),
  scale: linearScale,
  grid: false
} );



graph.render();


var detail = new Rickshaw.Graph.HoverDetail({
  graph: graph
});

var legend = new Rickshaw.Graph.Legend({
  graph: graph,
  element: document.querySelector('#legend')
});

</script>

<style type="text/css">
.tftable {font-size:12px;color:#333333;width:100%;border-width: 1px;border-color: #729ea5;border-collapse: collapse;}
.tftable th {font-size:12px;background-color:#171515;border-width: 1px;padding: 8px;border-style: solid;border-color: #729ea5;text-align:left;}
.tftable tr {background-color:#ffffff;}
.tftable td {font-size:12px;border-width: 1px;padding: 8px;border-style: solid;border-color: #729ea5;}
.tftable tr:hover td {background-color:#ffff99;}
</style>


<table border='1' class="tftable">
  <thead>
    <tr>
      <th>DateTest </th>
      <th>Calories Consumed</th>
      <th>Calories Burned by Excercise</th>
      <th>Weight</th>
    </tr>
  </thead>
  <tbody>

<% @userdailydata.each do |data| %>
<tr>
<td> <%= best_in_place data, :date,:display_with => lambda { |v| v.strftime("%Y-%m-%d") }  %> </td>
<td> <%= best_in_place data, :calories_consumed %> </td>
<td> <%= best_in_place data, :calories_exercised %> </td>
<td> <%= best_in_place data, :weight %> </td>

</tr> 
<% end %>
</tbody>
</table>





<!-- .strftime("%Y-%m-%d") -->
